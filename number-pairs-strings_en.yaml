number-pairs.title:                                       Number Pairs
screen.intro:                                             Intro
screen.ten:                                               Ten
screen.twenty:                                            Twenty
screen.sum:                                               Sum
screen.game:                                              Game
keyboardHelpDialog.objectHeading:                         Object
keyboardHelpDialog.object:                                object
keyboardHelpDialog.beadHeading:                           Bead
keyboardHelpDialog.bead:                                  bead
keyboardHelpDialog.countingObjectOrBeadHeading:           Apple, One, or Bead
keyboardHelpDialog.countingObjectOrBead:                  apple, one, or bead
keyboardHelpDialog.introScreen.moveGrabbableItemHeading:  Move Grabbed Object
keyboardHelpDialog.tenScreen.moveGrabbableItemHeading:    Move Kitten or Grabbed Bead
keyboardHelpDialog.twentyScreen.moveGrabbableItemHeading: Move Grabbed Object in Counting Area
keyboardHelpDialog.sumScreen.moveGrabbableItemHeading:    Move Kitten or Grabbed Bead
keyboardHelpDialog.gameScreen.moveKittenItemHeading:      Move Kitten
keyboardHelpDialog.jumpToLastKitten:                      Jump to last kitten
keyboardHelpDialog.jumpToFirstKitten:                     Jump to first kitten
keyboardHelpDialog.changeKittenColor:                     Change kitten color
keyboardHelpDialog.kittenSectionHeading:                  Interact With Kittens
keyboardHelpDialog.moveToRightSidePattern:                Move grabbed {{items}} to right side
keyboardHelpDialog.moveToLeftSidePattern:                 Move grabbed {{items}} to left side
keyboardHelpDialog.moveGrabbedObjectToOppositeSide:       Move Grabbed Object to Opposite Side
keyboardHelpDialog.moveBeadsToOppositeSide:               Move Beads to Opposite Side
keyboardHelpDialog.adjustObjectsTitle:                    Adjust Number of Colored Objects
keyboardHelpDialog.numberOfObjects:                       number of objects
phrase:                                                   Phrase
numberBond:                                               Number Bond
numberBondLowercase:                                      number bond
barModel:                                                 Bar Model
barModelLowercase:                                        bar model
equation:                                                 Equation
decompositionPhrasePattern:                               >-
                                                          <total>{{total}}</total> can be decomposed into <left>{{leftAddend}}</left>
                                                          and <right>{{rightAddend}}</right>
decompositionPhraseSpeechPattern:                         '{{total}} can be decomposed into {{leftAddend}} and {{rightAddend}}'
sumPhrasePattern:                                         >-
                                                          <left>{{leftAddend}}</left> plus <right>{{rightAddend}}</right> equals
                                                          <total>{{total}}</total>
sumPhraseSpeechPattern:                                   '{{leftAddend}} plus {{rightAddend}} equals {{total}}'
aNumber:                                                  a number
someNumber:                                               some number
anotherNumber:                                            another number
addends:                                                  Addends
tickNumbers:                                              Tick Numbers
totalJump:                                                Total Jump
total:                                                    Total
automaticallyHearPhrase:                                  Automatically Hear Phrase
automaticallyHearPhraseDescription:                       Hear phrase read automatically each time addends change. When toggled on, auto-read phrase may interfere with screen readers.
numberModelType:                                          Number Model Type
numberModelTypeDescription:                               >-
                                                          Choose between a traditional number bond representation or a proportional bar
                                                          model.
sumScreenNumberModelOrientation:                          Sum Screen Number Model Orientation
sumScreenNumberModelOrientationDescription:               >-
                                                          On the sum screen only, this changes the orientation of the total in the
                                                          number decomposition model.
tryAgain:                                                 Try Again
levelPattern:                                             Level {{level}}

gameScreen:
  levelDescriptions:
    level1: 'Missing addend in a {{numberModelType}} (0-10)'
    level2: 'Missing addend in a {{numberModelType}} (10 only)'
    level3: 'Missing addend in a decomposition equation (10 only)'
    level4: 'Missing addend in a sum equation (10 only)'
    level5: 'Missing addend in a {{numberModelType}} (11-20)'
    level6: 'Missing addend in a decomposition equation (11-20)'
    level7: 'Missing addend or total in a sum equation (11-20)'
    level8: 'Equations with the number line (0-20)'
  infoDialog:
    levelWithDescription: 'Level {{level}}: {{description}}'

a11y:

  introScreen:
    screenSummary:
      playArea:        >-
                       There are left and right counting areas with fun objects. You can organize objects inside a counting
                       area or move them between counting areas to break total apart in different ways. A decomposition phrase and a 
                       { $numberBarOrBarModel} represent the total number broken apart into two addends. Additionally, choose any total from 0 to 10,
                       automatically organize objects into rows, or swap addends.
      controlArea:     Reset the sim to start over.
      currentDetails:
        objectsPattern:    |-
                           { $count ->
                             [one] Currently, { $count } object is in counting area.
                            *[other] Currently, { $count } objects are in counting areas.
                           }
        hiddenAreaPattern: Currently, { $hiddenAddend } counting area is hidden.
        bothHidden:        Currently, both counting areas are hidden.
      interactionHint: Count or grab an object. Organize or move objects in counting area to play.

  tenScreen:
    screenSummary:
      playArea:    >-
                   There are yellow and blue objects you can move to organize or change color to 
                   change how total is broken apart. A decomposition phrase, a { $numberBarOrBarModel}, and equation 
                   represent how total is broken apart into two addends. Additionally, choose any total from 0 to 10, 
                   automatically organize objects, or swap addends.
      controlArea: '{ a11y.introScreen.screenSummary.controlArea }'
      currentDetails:
        countingAreaShown:               Currently, counting area shows { $count } { $itemType } broken into colors. A phrase, { $numberBarOrBarModel} and equation show how total is broken apart.
        countingAreaShownWithNumberLine: Currently, counting area shows total of { $count } broken into two addends with addend splitter. A phrase, { $numberBarOrBarModel }, and equation show how total is broken apart.
        countingAreaHidden:              Currently, the counting area is hidden. A phrase, { $numberBarOrBarModel } and equation show how total is broken apart.
      interactionHint:
        beads:      Navigate to and grab bead to create groups, or move it across divider to change color.
        kittens:    Choose kitten to move, organize, or change its color.
        numberLine: Navigate to addend splitter knob and move it to change how total is broken apart.

  # Basic terms and interactions
  left:                   left
  right:                  right
  leftCapitalized:        Left
  rightCapitalized:       Right
  movableRoleDescription: movable
  countingAreaEmpty:      Counting Area Empty
  unknownNumber:          unknown number

  # TODO: https://github.com/phetsims/number-pairs/issues/200 this section could benefit from substructure
  # TODO: Or consider collapsing it like so:
  #       orderItemPattern: { $order } { $item } on { $side } side
  #       itemPattern: { $item } on { $side } side
  grabOrReleaseInteraction:
    releasedHelpText:           Use arrows to navigate and choose which { $item } to move. Space or enter to grab.
    grabbedHelpTextPattern:     Move { $item } in or between left and right counting areas.
    grabbedAccessibleResponse:  Grabbed, in { $addend } counting area.
    releasedAccessibleResponse: Released, in { $addend } counting area.
    movedAccessibleResponse:    now in { $addend } counting area
    firstLeftItemPattern:       First { $item } on left side
    leftItemPattern:            '{ $item } on left side'
    lastLeftItemPattern:        Last { $item } on left side
    onlyLeftItemPattern:        Only { $item } on left side
    firstRightItemPattern:      First { $item } on right side
    rightItemPattern:           '{ $item } on right side'
    lastRightItemPattern:       Last { $item } on right side
    onlyRightItemPattern:       Only { $item } on right side
    noItemSelected:             No item selected
  countingArea:
    accessibleHeading:          Counting Area

    # TODO: https://github.com/phetsims/number-pairs/issues/200 What does the NUMBER syntax do here, and what would go wrong without it?
    leadingParagraph:           |-
                                { NUMBER($total) ->
                                [1] Counting area has 1 total { $item }
                                *[other] Counting area has { $total } total { $items }
                                }
    numberBondLeadingParagraph: Number bond has { $total } in top circle
    barModelLeadingParagraph:   Bar model has { $total } in top rectangle
    leftSideListItemPattern:    '{ $value } on left side'
    rightSideListItemPattern:   '{ $value } on right side'
    leftSideBeadsPattern:       '{ $value } yellow on left side'
    rightSideBeadsPattern:      '{ $value } blue on right side'
    yellowListItemPattern:      '{ $value } yellow'
    blueListItemPattern:        '{ $value } blue'
    leftCircleListItemPattern:  '{ $value } in left circle'
    rightCircleListItemPattern: '{ $value } in right circle'
    valueHidden:                some

  equationAccordionBox:
    accessibleHelpTextCollapsed: View decomposition equation.

  # Representation types
  representationType:
    accessibleName:     Representation Type
    accessibleHelpText: Choose representation for counting area.
  apples:
    accessibleName:         Apples
    singularAccessibleName: Apple
  soccerBalls:
    accessibleName:         Soccer Balls
    singularAccessibleName: Soccer Ball
  butterflies:
    accessibleName:         Butterflies
    singularAccessibleName: Butterfly
  ones:
    accessibleName:         Ones
    singularAccessibleName: One
  kittens:
    accessibleName:            Kittens
    singularAccessibleName:    Kitten
    changeColorAccessibleName: Change Color
    leftAddendColor:           Yellow
    rightAddendColor:          Blue
    kittenPattern:             |-
                               { $descriptor ->
                                   [first] First { $color} Kitten 
                                   [last] Last { $color } Kitten 
                                   [only] Only { $color } Kitten 
                                   *[other] { $color } Kitten
                               }
    accessibleHelpText:
      withAttributeSwitch:    Change kitten color and move kittens around to play.
      withoutAttributeSwitch: Move kittens around to play.

  beads:
    accessibleName:         Beads
    singularAccessibleName: Bead
    leftAddendBead:         Yellow Bead
    rightAddendBead:        Blue Bead
    accessibleHelpText:     Counting area with grabbable and movable beads.

  # Number line
  numberLine:
    accessibleName:  Number Line
    addendSplitterKnob:
      accessibleName:     Addend Splitter Knob
      accessibleHelpText: Move knob to change how addends are split.
    contextResponse: '{ $total } is split into { $left } and { $right }.'
  numberLineDescription:
    leadingCountOn:                  'Number line shows a green line to represent total and a blue jump from knob to total:'
    leadingCountFromZero:            'Number line shows a green line to represent total, a yellow jump from left edge to knob, and a blue jump from knob to total:'
    leadingHidden:                   Number line is hidden.
    totalStartsPattern:              Total starts at { $start }, ends at { $end }
    totalSpansPattern:               Total spans from { $start } to { $end }
    knobIsAtPattern:                 Knob is at { $value }
    knobSplits:                      Knob splits total into 2 sections
    leftEdgeLabel:                   left edge
    totalLabel:                      total
    knobLabel:                       knob
    countOnLeftAddendPattern:        Left addend, { $left }, marked on number line
    countOnJumpPattern:              Jump of length { $right } starts at { $start } and ends at total
    countFromZeroLeftAddendPattern:  Left addend, { $left }, is shown above jump from left edge to knob
    countFromZeroRightAddendPattern: Right addend, { $right }, is shown above jump from { $start } to total
    countOnTotalJumpPattern:         Jump of length { $total } is labeled
    countFromZeroTotalJumpPattern:   Jump spans total length, { $total }

  # Total/Number model
  totalSceneSelection:
    totalNumberPattern: Total Number { $value }
    accessibleHelpText: Choose total for counting area.
  totalCheckbox:
    accessibleHelpText: Show or hide the sum of the two addends.

  # Controls and interactions
  controls:
    accessibleHeading: Counting Area Controls
    phrase:
      accessibleHelpTextCollapsed: Phrase tells how total is decomposed.
    speechSynthesis:
      accessibleName:             Hear Phrase
      noVoiceAccessibleName:      No Voice Found
      noVoiceAccessibleParagraph: >-
                                  There is no voice found on this device for the selected language. Your device may support downloading additional
                                  voices for this language.
      accessibleHelpText:         Hear phrase read aloud.
    localeSwitch:
      accessibleHelpText: Choose between two languages to hear and read phrase.
    numberModel:
      numberBond:                                number bond

      # TODO https://github.com/phetsims/number-pairs/issues/200 this value doesn't match the key
      barModel:                                  proportional bar model
      accessibleHelpText:                        Represent decomposition as a { $representation }.
      numberBondAccessibleParagraph:             >-
                                                 Number bond has three circles arranged with one circle on top and two underneath like a triangle. Top circle
                                                 tells total number of objects, left circle is left addend, right circle is right addend.
      currentNumberBondStateAccessibleParagraph: Right now, { $total } in top circle. { $left } in left circle, { $right } in right circle.
      barModelAccessibleParagraph:               >-
                                                 Two matching rectangles are stacked on top of each other. Top rectangle is not split and tells total number of
                                                 objects, bottom rectangle is split into two sections that adjust based on size of addends.

      # TODO https://github.com/phetsims/number-pairs/issues/200 should proportion be changed to proportions?
      currentBarModelStateAccessibleParagraph:   Right now, { $total } in top rectangle. { $left } and { $right } in bottom rectangle, split into { $proportion } sections.
      largerAndSmaller:                          larger and smaller
      smallerAndLarger:                          smaller and larger
      equal:                                     equal
    tenFrameButton:
      accessibleName:            Organize { $representation } Into Groups
      accessibleHelpText:        |-
                                 { $representationType ->
                                   [kittens] Group by color, up to 5 kittens per row.
                                   [beads] Group by color, up to 5 beads per group.
                                   *[other] Each group has a maximum of 5 { $representation }.
                                 }
      accessibleContextResponse: Organized.
    commutativeButton:
      accessibleName:                  Swap Addends
      accessibleHelpTextPattern:       Switch { $items } from left counting area to right and right counting area to left.
      accessibleContextResponse:       '{ $leftAddend } on left, { $rightAddend } on right, { $total } total.'
      accessibleContextResponseHidden: Addends swapped, contents hidden.
    bothAddendsVisible:
      accessibleName:            Counting Area Visibility
      accessibleHelpTextPattern: Show or hide counting area and both addends in { $modelRepresentation }.

    # TODO: Should this yaml key have a "button" or "toggleButton" suffix? see https://github.com/phetsims/number-pairs/issues/200
    addendVisible:
      accessibleNamePattern:     '{ $addend } Counting Area Visibility'
      accessibleHelpTextPattern: Show or hide { $addend } counting area and { $addend } addend in { $modelRepresentation }.
      accessibleContextResponse:
        hidden:  contents hidden
        visible: contents visible
    showAddends:
      accessibleName: Show addends
    hideAddends:
      accessibleName: Hide addends
    leftObjects:
      accessibleName: Yellow Objects
    rightObjects:
      accessibleName: Blue Objects
    countingObjectControl:
      accessibleHelpText: Add or remove from the { $addend } addend.
    countFromZeroSwitch:
      valueAAccessibleName: Count On
      valueBAccessibleName: Count from Zero
      accessibleHelpText:   Choose where to start counting. Count on from first addend to get total or count to first addend starting at zero.
    totalCheckbox:
      accessibleHelpText: Show or hide the sum of the two addends.
    addendsCheckbox:
      accessibleHelpText:                 Show or hide addend values.
      accessibleContextResponseChecked:   'Addends are { $leftAddend } and { $rightAddend }, labeled on number line.'
      accessibleContextResponseUnchecked: Addends hidden.
    tickNumbersCheckbox:
      accessibleHelpText:                 Show or hide tick mark numbers on number line.
      accessibleContextResponseChecked:   Tick marks labeled.
      accessibleContextResponseUnchecked: Tick mark labels not labeled.
    totalJumpCheckbox:
      accessibleHelpText:                 Show or hide total jump on number line.
      accessibleContextResponseChecked:   Total jump is shown and labeled.
      accessibleContextResponseUnchecked: Total jump is not shown.
  equation:
    accessibleParagraphPattern:       '{ $total } = { $leftAddend } + { $rightAddend }'
    accessibleParagraphHiddenPattern: '{ $total } = { $leftPlaceholder } + { $rightPlaceholder }'

  # Game
  gameScreen:
    answerButton:
      wrongAccessibleName: '{$value}, wrong answer'
    responses:
      correctAnswer:           '{ $guess } is correct.'
      incorrectAnswer:         '{ $guess } is incorrect. Try a different number.'
      correctAnswerOnFirstTry: '{ $guess } is correct. Stars increased to { $score }.'
    resetChallengeButton:
      accessibleName:     Reset Challenge
      accessibleHelpText: Reset the current challenge to try again.

  # Preferences
  preferences:
    sumScreenModelOrientation:
      totalOnTop:    Total on Top
      totalOnBottom: Total on Bottom

  # Keyboard help dialog
  keyboardHelpDialog:
    moveAcrossDescription:
      labelInnerContent: Move grabbed { $item } to { $addend } side with { $key } key.
    adjustObjectsKeyboard:
      labelInnerContent: Adjust number of objects with arrow keys.
    kittenInteraction:
      jumpToFirstLabelInnerContent: Jump to first kitten with Home key.
      jumpToLastLabelInnerContent:  Jump to last kitten with End key.
      changeColorLabelInnerContent: Change color with Space or Enter key.
